<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--
html : body, html 등 정해진 태그자들이 존재 / 화면에 데이터를 표현하는 용도로 주로 사용
xml : 정해진 태그 x -> 커스텀 태그 / 데이털르 전달하거나 설명하는 용도 , 설정 파일, 공공데이터 (다량의 데이터를 다룰 때)\-->

<!--
BeanFactory 클래스 처럼 인스턴스를 찍어내는 작업을 클래스가 아닌 xml 파일에서 실행
<bean> 직접 등록(인스턴스, 클래스, 객체)
id : 생성하고자 하는 인스턴스의 이름
class : 생성하고자 하는 인스턴스 클래스의 경로값
-->
<!-- 스프링 프로젝트를 실행시킬 때 스프링 컨테이너가 실행됨.
   스프링 컨테이너 : 프레임 워크에서 관리하는 인스턴스, 리소스 등을 담고 있는 바구니
   -> 아래쪽 bean 태그를 이용해 등록하겠다고 선언한 클래스의 인스턴스를 생성해 스프링 컨테이너 안에 담아줌
   -> 기본적으로 스프릉에서 인스턴스의 생성은 singleton으로 동작하여 하나의 인스턴스만 만들어짐 -->
<!--    <bean id="samsung" class="com.kh.intro.SamsungLaptop"/>-->

<!-- DI(Dependency Injection) 의존성 주입 - 인스턴스 멤버필드에 값을 세팅
- constructor injection : 생성자 주입
- setter injection : 세터 주입
   -->
<!--    <bean id="samsung" class="com.kh.intro.SamsungLaptop">-->
<!--        <constructor-arg index="0" value="1000">-->

<!--        </constructor-arg>-->
<!--    </bean>-->
    <bean id = "samsung" class="com.kh.intro.SamsungLaptop">
        <property name="price" value="2000"></property>
    </bean>

</beans>